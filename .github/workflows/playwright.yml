name: Playwright Tests
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      files:
        description: 'Put path to folders or names of files separated by space'
        type: string
      e2e:
        type: boolean
        default: false
        description: Select e2e folder
      tests_examples:
        type: boolean
        default: false
        description: Select tests-examples folder

jobs:
  playwright-tests:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shardIndex: [1, 2, 3, 4, 5]
        shardTotal: [5]

    env:
      TEST_APP_PATH: test-app
      NODE_VERSION: lts/*
      ALLURE_RESULTS_DIR: allure-results

    steps:
    - name: Checkout repository with playwright tests
      uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
    
    - name: Checkout external repository with test-app project
      uses: actions/checkout@v4
      with:
        repository: "gomczak/test-app"
        path: ${{ env.TEST_APP_PATH }}

    - name: Create .env file for test app
      working-directory: ${{ env.TEST_APP_PATH }}
      run: |
        touch .env
        echo "${{secrets.ENV_SECRETS}}" >> .env

    - name: Run docker compose
      working-directory: ${{ env.TEST_APP_PATH }}
      run: |
        docker compose up --build -d

    - name: Install dependencies
      run: npm install -g pnpm && pnpm install --frozen-lockfile

    - name: Install Playwright Browsers
      run: pnpm exec playwright install --with-deps

    - name: Run Playwright tests
      run: |
        selected_options=()
        if [[ "${{ github.event.inputs.e2e }}" == "true" ]]; then
          selected_options+=("/e2e")
        fi
        if [[ "${{ github.event.inputs.tests_examples }}" == "true" ]]; then
          selected_options+=("/test-examples")
        fi
        echo "Selected options: ${selected_options[@]} ${{ github.event.inputs.files }}"
        pnpm exec playwright test \
        ${selected_options[@]} \
        ${{ github.event.inputs.files }} \
        --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }} \
        --reporter allure-playwright

    - name: Upload Allure results to GitHub Actions Artifacts
      if: ${{ !cancelled() }}
      uses: actions/upload-artifact@v4
      with:
        name: allure-results-${{ matrix.shardIndex }}
        path: ${{ env.ALLURE_RESULTS_DIR }}
        retention-days: 1
    
  merge-reports:
    # Merge reports after playwright-tests, even if some shards have failed
    if: ${{ !cancelled() }}
    needs: [playwright-tests]

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*
    - name: Install dependencies
      run: npm install -g pnpm && pnpm install --frozen-lockfile

    - name: Download and merge Allure reports from GitHub Actions Artifacts
      uses: actions/download-artifact@v4
      with:
        path: allure-results
        pattern: allure-results-*
        merge-multiple: true

    - name: Upload merged Allure results
      uses: actions/upload-artifact@v4
      with:
        name: all-allure-results
        path: allure-results
        retention-days: 14
  
    - name: Load test report history
      uses: actions/checkout@v4
      if: always()
      continue-on-error: true
      with:
        ref: gh-pages
        path: gh-pages

    - name: Build test report
      uses: simple-elf/allure-report-action@v1.7
      if: always()
      with:
        gh_pages: gh-pages
        allure_history: allure-history
        allure_results: allure-results

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: allure-history

  deploy:
    needs: [merge-reports]
    permissions:
      pages: write
      id-token: write
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

    # - name: Publish test report
    #   uses: peaceiris/actions-gh-pages@v3
    #   if: always()
    #   with:
    #     github_token: ${{ secrets.GITHUB_TOKEN }}
    #     publish_branch: gh-pages
    #     publish_dir: allure-history
